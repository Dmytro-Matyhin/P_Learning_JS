{"version":3,"sources":["webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/request-post.ts","webpack://my-webpack-project/./src/request-comments.ts","webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/webpack/runtime/define property getters","webpack://my-webpack-project/webpack/runtime/hasOwnProperty shorthand","webpack://my-webpack-project/webpack/startup"],"names":["url","posts","document","querySelector","addEventListener","event","preventDefault","id","fetch","requestPost","value","then","request","json","data","console","log","postTitle","title","postBody","body","div","createElement","description","innerHTML","append","com","requestCommentsByPostId","forEach","item","commentName","name","commentBody","commentTitle","comment","after","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"iEAEO,MAAMA,EAAM,wCACNC,EAAQ,QAErB,IAAI,EAAOC,SAASC,cAAc,SACdD,SAASC,cAAc,YAC7BC,iBAAiB,SAC/B,SAAcC,GACVA,EAAMC,iBCPK,SAAqBC,GAChC,OAAOC,MAAM,GAAGR,IAAMC,KAASM,KDQ/BE,CADSP,SAASC,cAAc,OAAOO,OACvBC,MAAKC,GACVA,EAAQC,SAEdF,MAAKG,IACNC,QAAQC,IAAIF,GACZ,IAAIG,EAAYH,EAAKI,MACjBC,EAAWL,EAAKM,KAChBC,EAAMnB,SAASoB,cAAc,OAC7BJ,EAAQhB,SAASoB,cAAc,MAC/BC,EAAcrB,SAASoB,cAAc,KAMzC,OALAJ,EAAMM,UAAY,UAAYP,EAC9BM,EAAYC,UAAY,gBAAkBL,EAC1CE,EAAII,OAAOP,GACXG,EAAII,OAAOF,GACX,EAAKE,OAAOJ,GEvBL,SAAiCK,GAC5C,IAAInB,EAAKL,SAASC,cAAc,OAAOO,MACvC,OAAOF,MAAM,GAAGR,IAAMC,KAASM,KAAMmB,KFsB1BC,CAtBE,eAwBRhB,MAAKC,GACCA,EAAQC,SAEdF,MAAKG,IACNC,QAAQC,IAAIF,GACZA,EAAKc,SAASC,IACV,IAAIC,EAAcD,EAAKE,KACnBC,EAAcH,EAAKT,KACnBC,EAAMnB,SAASoB,cAAc,OAC7BW,EAAe/B,SAASoB,cAAc,KACtCY,EAAUhC,SAASoB,cAAc,KACrCW,EAAaT,UAAY,yBAA2BM,EACpDI,EAAQV,UAAY,wBAA0BQ,EAC9CX,EAAII,OAAOQ,GACXZ,EAAII,OAAOS,GACX,EAAKC,MAAMd,cG1CnBe,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUC,QAG3C,IAAIC,EAASJ,EAAyBE,GAAY,CAGjDC,QAAS,IAOV,OAHAE,EAAoBH,GAAUE,EAAQA,EAAOD,QAASF,GAG/CG,EAAOD,QCnBfF,EAAoBK,EAAI,CAACH,EAASI,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAEN,EAASK,IAC5EE,OAAOC,eAAeR,EAASK,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EP,EAAoBQ,EAAI,CAACK,EAAKC,IAASL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCEjFd,EAAoB,M","file":"main.js","sourcesContent":["import requestPost from './request-post';\nimport requestCommentsByPostId from './request-comments';\nexport const url = 'https://jsonplaceholder.typicode.com/';\nexport const posts = 'posts';\nconst comments = 'comments';\nlet form = document.querySelector('#form');\nlet buttonRequest = document.querySelector('#request');\nbuttonRequest.addEventListener('click', main);\nfunction main(event) {\n    event.preventDefault();\n    let id = document.querySelector('#id').value;\n    requestPost(id).then(request => {\n        return request.json();\n    })\n        .then(data => {\n        console.log(data);\n        let postTitle = data.title;\n        let postBody = data.body;\n        let div = document.createElement('div');\n        let title = document.createElement('h3');\n        let description = document.createElement('p');\n        title.innerHTML = 'Title: ' + postTitle;\n        description.innerHTML = '<b>Body:</b> ' + postBody;\n        div.append(title);\n        div.append(description);\n        form.append(div);\n        return requestCommentsByPostId(comments);\n    })\n        .then(request => {\n        return request.json();\n    })\n        .then(data => {\n        console.log(data);\n        data.forEach((item) => {\n            let commentName = item.name;\n            let commentBody = item.body;\n            let div = document.createElement('div');\n            let commentTitle = document.createElement('p');\n            let comment = document.createElement('p');\n            commentTitle.innerHTML = '<b>Comment Title:</b> ' + commentName;\n            comment.innerHTML = '<b>Comment Body:</b> ' + commentBody;\n            div.append(commentTitle);\n            div.append(comment);\n            form.after(div);\n        });\n    });\n}\n","import { url } from './index';\nimport { posts } from './index';\nexport default function requestPost(id) {\n    return fetch(`${url}${posts}/${id}`);\n}\n","import { url } from './index';\nimport { posts } from './index';\nexport default function requestCommentsByPostId(com) {\n    let id = document.querySelector('#id').value;\n    return fetch(`${url}${posts}/${id}/${com}`);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// startup\n// Load entry module\n__webpack_require__(223);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}